trigger: none
name: $(date:yyyyMMdd)$(rev:.r)
variables:
- name: BUILD_DIR
  value: $(Build.ArtifactStagingDirectory)
- group: AppCenter-SDK-Android Bintray and Maven
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure Pipelines
      image: macos-latest
      os: macOS
    customBuildTags:
    - ES365AIMigrationTooling-BulkMigrated
    sdl:
      sourceAnalysisPool: 1ES-PT-Windows-2022
    stages:
    - stage: BuildArtifacts
      displayName: Build Artifacts and collect version info
      jobs:
      - job: BuildArtifacts
        displayName: Build Artifacts 
        cancelTimeoutInMinutes: 1
        templateContext:
          sdl:
            codeql:
              language: java, python, ruby
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: Release'
            targetPath: $(Build.ArtifactStagingDirectory)/com/microsoft
            artifactName: Release
        steps:
        - checkout: self
          clean: true
          submodules: recursive
          fetchTags: false
        - task: JavaToolInstaller@0
          displayName: Use Java 11
          inputs:
            versionSpec: 11
            jdkArchitectureOption: x64
            jdkSourceOption: PreInstalled
        - task: DownloadSecureFile@1
          displayName: Download GPG-key
          inputs:
            secureFile: 98b107ca-fab1-42c0-819d-2871c022869c
        - task: Bash@3
          displayName: Put Azure Credentials
          inputs:
            filePath: ./scripts/put-azure-credentials.sh
            arguments: $(AZURE_USERNAME) $(AZURE_PASSWORD)
        - task: ShellScript@2
          displayName: Configure bintray
          inputs:
            scriptPath: scripts/put-bintray-secrets-gradle.sh
            args: $(MAVEN_USER) $(MAVEN_KEY) $(GDP_SIGNING_KEY_ID) "$(Agent.TempDirectory)/appcenter-gpg-key.gpg" $(GDP_KEY_PASSWORD)
            disableAutoCwd: true
        - task: Bash@3
          displayName: Set NDK version
          inputs:
            filePath: ./scripts/set-ndk-version.sh
        - task: Gradle@1
          displayName: Gradle publish to Maven local
          inputs:
            tasks: publish
            publishJUnitResults: false
        - task: Bash@3
          displayName: 'Extract Version info'
          inputs:
            targetType: 'inline'
            script: |
              VERSION=$(grep "versionName = '" versions.gradle | awk -F "[']" '{print $2}')
              echo $VERSION > $(Build.ArtifactStagingDirectory)/com/microsoft/version            
      
    - stage: APIScan
      dependsOn: BuildArtifacts
      pool:
        name: 1ES-PT-Windows-2022
        os: windows
      variables:
        "agent.source.skip": true
      jobs:
      - job: APIScan
        steps:
        - task: DownloadPipelineArtifact@2
          displayName: Download Build Artifacts for APIScan
          inputs:
            artifactName: Release
            targetPath: '$(Agent.BuildDirectory)/Release'
        - task: AzureKeyVault@2
          inputs:
            azureSubscription: 'AC - Dev Infra & Build Pool'
            KeyVaultName: 'mobile-center-sdk'
            SecretsFilter: 'appcenter-sdk-managed-identity-clientid'
            RunAsPreJob: false
        - task: APIScan@2
          displayName: 'Run APIScan'
          inputs:
            softwareFolder: '$(Agent.BuildDirectory)\Release'
            softwareName: 'appcenter-sdk-android'
            softwareVersionNum: '$(Build.BuildId)'
            isLargeApp: false
            toolVersion: 'Latest'
            verbosityLevel: verbose
          condition: and(succeeded(), ne(variables['DisableAPIScan'], 'true'))
          env:
            AzureServicesAuthConnectionString: 'runAs=App;AppId=$(appcenter-sdk-managed-identity-clientid)'